---
name: "Test: builds and publishing"

on:  # yamllint disable-line rule:truthy
  workflow_dispatch:
  push:
    branches:
      - "master"

jobs:
  pre-release:
    name: "Build and test publishing (PyPI)"
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        python-version: ['3.11']
    steps:

      - name: "Populate environment variables"
        id: setenv
        run: |
          set -x
          datetime=$(date +'%Y%m%d%H%M')
          export datetime
          echo "datetime=${datetime}" >> "$GITHUB_OUTPUT"
          vernum="${{ matrix.python-version }}.${datetime}"
          echo "vernum=${vernum}" >> "$GITHUB_OUTPUT"

      - name: "Checkout repository"
        uses: actions/checkout@v3

      - name: "Set up Python ${{ matrix.python-version }}"
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: "Install dependencies"
        run: |
          python -m pip install --upgrade pip
          pip install tox tox-gh-actions

      - name: "Tag for test release"
        # Delete all local tags, then create a synthetic tag for testing
        # Use the date/time to avoid conflicts uploading to Test PyPI
        run: |
          scripts/dummy-versioning.sh "${{ steps.setenv.outputs.vernum }}"
          git tag | xargs -L 1 | xargs git tag --delete
          git tag "v${{ steps.setenv.outputs.vernum }}"
          git checkout "tags/v${{ steps.setenv.outputs.vernum }}"
          grep version pyproject.toml

      - name: "Build with TOX"
        run: |
          tox -e build

      - name: "Publish build products (GitHub)"
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Development Build"
          files: |
            dist/*.tar.gz
            dist/*.whl

      - name: "Publish artefacts (Test PyPI)"
        uses: pypa/gh-action-pypi-publish@release/v1.8
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
