:py:mod:`ITR.configs`
=====================

.. py:module:: ITR.configs

.. autoapi-nested-parse::

   This file defines the constants used throughout the different classes. In order to redefine these settings whilst using
   the module, extend the respective config class and pass it to the class as the "constants" parameter.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   ITR.configs.ColumnsConfig
   ITR.configs.SectorsConfig
   ITR.configs.VariablesConfig
   ITR.configs.TargetConfig
   ITR.configs.TabsConfig
   ITR.configs.PortfolioAggregationConfig
   ITR.configs.TemperatureScoreConfig
   ITR.configs.LoggingConfig




.. py:class:: ColumnsConfig

   .. py:attribute:: COMPANY_ID
      :annotation: = company_id

      

   .. py:attribute:: COMPANY_LEI
      :annotation: = company_lei

      

   .. py:attribute:: COMPANY_ISIN
      :annotation: = company_isin

      

   .. py:attribute:: COMPANY_ISIC
      :annotation: = isic

      

   .. py:attribute:: COMPANY_MARKET_CAP
      :annotation: = company_market_cap

      

   .. py:attribute:: INVESTMENT_VALUE
      :annotation: = investment_value

      

   .. py:attribute:: COMPANY_ENTERPRISE_VALUE
      :annotation: = company_enterprise_value

      

   .. py:attribute:: COMPANY_EV_PLUS_CASH
      :annotation: = company_ev_plus_cash

      

   .. py:attribute:: COMPANY_TOTAL_ASSETS
      :annotation: = company_total_assets

      

   .. py:attribute:: SCOPE
      :annotation: = scope

      

   .. py:attribute:: START_YEAR
      :annotation: = start_year

      

   .. py:attribute:: VARIABLE
      :annotation: = variable

      

   .. py:attribute:: SLOPE
      :annotation: = slope

      

   .. py:attribute:: TIME_FRAME
      :annotation: = time_frame

      

   .. py:attribute:: TEMPERATURE_SCORE
      :annotation: = temperature_score

      

   .. py:attribute:: COMPANY_NAME
      :annotation: = company_name

      

   .. py:attribute:: OWNED_EMISSIONS
      :annotation: = owned_emissions

      

   .. py:attribute:: COUNTRY
      :annotation: = country

      

   .. py:attribute:: SECTOR
      :annotation: = sector

      

   .. py:attribute:: TEMPLATE_EXPOSURE
      :annotation: = exposure

      

   .. py:attribute:: TEMPLATE_CURRENCY
      :annotation: = currency

      

   .. py:attribute:: TEMPLATE_REPORT_DATE
      :annotation: = report_date

      

   .. py:attribute:: EMISSIONS_METRIC
      :annotation: = emissions_metric

      

   .. py:attribute:: PRODUCTION_METRIC
      :annotation: = production_metric

      

   .. py:attribute:: BASE_YEAR_PRODUCTION
      :annotation: = base_year_production

      

   .. py:attribute:: GHG_SCOPE12
      :annotation: = ghg_s1s2

      

   .. py:attribute:: GHG_SCOPE3
      :annotation: = ghg_s3

      

   .. py:attribute:: TEMPLATE_SCOPE1
      :annotation: = em_s1

      

   .. py:attribute:: TEMPLATE_SCOPE2
      :annotation: = em_s2

      

   .. py:attribute:: TEMPLATE_SCOPE12
      :annotation: = em_s1s2

      

   .. py:attribute:: TEMPLATE_SCOPE3
      :annotation: = em_s3

      

   .. py:attribute:: TEMPLATE_SCOPE123
      :annotation: = em_s1s2s3

      

   .. py:attribute:: HISTORIC_DATA
      :annotation: = historic_data

      

   .. py:attribute:: TARGET_DATA
      :annotation: = target_data

      

   .. py:attribute:: TEMPLATE_PRODUCTION
      :annotation: = production

      

   .. py:attribute:: COMPANY_REVENUE
      :annotation: = company_revenue

      

   .. py:attribute:: CASH_EQUIVALENTS
      :annotation: = company_cash_equivalents

      

   .. py:attribute:: BASE_YEAR
      :annotation: = base_year

      

   .. py:attribute:: END_YEAR
      :annotation: = end_year

      

   .. py:attribute:: ISIC
      :annotation: = isic

      

   .. py:attribute:: INDUSTRY_LVL1
      :annotation: = industry_level_1

      

   .. py:attribute:: INDUSTRY_LVL2
      :annotation: = industry_level_2

      

   .. py:attribute:: INDUSTRY_LVL3
      :annotation: = industry_level_3

      

   .. py:attribute:: INDUSTRY_LVL4
      :annotation: = industry_level_4

      

   .. py:attribute:: REGION
      :annotation: = region

      

   .. py:attribute:: CUMULATIVE_BUDGET
      :annotation: = cumulative_budget

      

   .. py:attribute:: CUMULATIVE_TRAJECTORY
      :annotation: = cumulative_trajectory

      

   .. py:attribute:: CUMULATIVE_TARGET
      :annotation: = cumulative_target

      

   .. py:attribute:: TARGET_PROBABILITY
      :annotation: = target_probability

      

   .. py:attribute:: BENCHMARK_TEMP
      :annotation: = benchmark_temperature

      

   .. py:attribute:: BENCHMARK_GLOBAL_BUDGET
      :annotation: = benchmark_global_budget

      

   .. py:attribute:: BASE_EI
      :annotation: = ei_at_base_year

      

   .. py:attribute:: PROJECTED_EI
      :annotation: = projected_intensities

      

   .. py:attribute:: PROJECTED_TARGETS
      :annotation: = projected_targets

      

   .. py:attribute:: HISTORIC_PRODUCTIONS
      :annotation: = historic_productions

      

   .. py:attribute:: HISTORIC_EMISSIONS
      :annotation: = historic_emissions

      

   .. py:attribute:: HISTORIC_EI
      :annotation: = historic_ei

      

   .. py:attribute:: TRAJECTORY_SCORE
      :annotation: = trajectory_score

      

   .. py:attribute:: TRAJECTORY_OVERSHOOT
      :annotation: = trajectory_overshoot_ratio

      

   .. py:attribute:: TARGET_SCORE
      :annotation: = target_score

      

   .. py:attribute:: TARGET_OVERSHOOT
      :annotation: = target_overshoot_ratio

      

   .. py:attribute:: WEIGHTED_TEMPERATURE_SCORE
      :annotation: = weighted_temperature_score

      

   .. py:attribute:: CONTRIBUTION_RELATIVE
      :annotation: = contribution_relative

      

   .. py:attribute:: CONTRIBUTION
      :annotation: = contribution

      


.. py:class:: SectorsConfig

   .. py:attribute:: STEEL
      :annotation: = Steel

      

   .. py:attribute:: ELECTRICITY
      :annotation: = Electricity Utilities

      

   .. py:attribute:: INFORMATION_TECHNOLOGY
      :annotation: = Information Technology

      

   .. py:attribute:: INDUSTRIALS
      :annotation: = Industrials

      

   .. py:attribute:: FINANCIALS
      :annotation: = Financials

      

   .. py:attribute:: HEALTH_CARE
      :annotation: = Health Care

      

   .. py:attribute:: AUTOMOBILE
      :annotation: = Autos

      

   .. py:method:: get_configured_sectors() -> List[str]
      :classmethod:

      Get a list of sectors configured in the tool.
      :return: A list of sectors string values



.. py:class:: VariablesConfig

   .. py:attribute:: EMISSIONS
      :annotation: = Emissions

      

   .. py:attribute:: PRODUCTIONS
      :annotation: = Productions

      

   .. py:attribute:: EMISSIONS_INTENSITIES
      :annotation: = Emissions Intensities

      


.. py:class:: TargetConfig

   .. py:attribute:: COMPANY_ID
      :annotation: = company_id

      

   .. py:attribute:: COMPANY_LEI
      :annotation: = company_lei

      

   .. py:attribute:: COMPANY_ISIN
      :annotation: = company_isin

      

   .. py:attribute:: COMPANY_ISIC
      :annotation: = isic

      

   .. py:attribute:: NETZERO_DATE
      :annotation: = netzero_date

      

   .. py:attribute:: TARGET_TYPE
      :annotation: = target_type

      

   .. py:attribute:: TARGET_SCOPE
      :annotation: = target_scope

      

   .. py:attribute:: TARGET_START_YEAR
      :annotation: = target_start_year

      

   .. py:attribute:: TARGET_BASE_YEAR
      :annotation: = target_base_year

      

   .. py:attribute:: TARGET_BASE_MAGNITUDE
      :annotation: = target_base_year_qty

      

   .. py:attribute:: TARGET_BASE_UNITS
      :annotation: = target_base_year_unit

      

   .. py:attribute:: TARGET_YEAR
      :annotation: = target_year

      

   .. py:attribute:: TARGET_REDUCTION_VS_BASE
      :annotation: = target_reduction_ambition

      


.. py:class:: TabsConfig

   .. py:attribute:: FUNDAMENTAL
      :annotation: = fundamental_data

      

   .. py:attribute:: PROJECTED_EI
      :annotation: = projected_ei_in_Wh

      

   .. py:attribute:: PROJECTED_PRODUCTION
      :annotation: = projected_production

      

   .. py:attribute:: PROJECTED_TARGET
      :annotation: = projected_target

      

   .. py:attribute:: HISTORIC_DATA
      :annotation: = historic_data

      

   .. py:attribute:: TEMPLATE_INPUT_DATA
      :annotation: = ITR input data

      

   .. py:attribute:: TEMPLATE_TARGET_DATA
      :annotation: = ITR target input data

      


.. py:class:: PortfolioAggregationConfig

   .. py:attribute:: COLS
      

      


.. py:class:: TemperatureScoreConfig

   Bases: :py:obj:`PortfolioAggregationConfig`

   .. py:attribute:: SCORE_RESULT_TYPE
      :annotation: = score_result_type

      

   .. py:attribute:: CONTROLS_CONFIG
      

      


.. py:class:: LoggingConfig

   .. py:attribute:: FORMAT
      :annotation: = %(asctime)s - %(name)s - %(levelname)s - %(message)s

      

   .. py:method:: add_config_to_logger(logger: logging.Logger)
      :classmethod:



